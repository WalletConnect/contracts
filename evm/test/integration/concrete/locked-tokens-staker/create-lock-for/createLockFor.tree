createLockFor.t.sol
├── given contract is paused
│   └── it should revert
└── given contract is not paused
    ├── when msg.sender is not the original beneficiary
    │   └── it should revert
    └── when msg.sender is the original beneficiary
        ├── given user already has a lock
        │   └── it should revert
        └── given user does not have a lock
            ├── when value is zero
            │   └── it should revert
            ├── when the value is greater than the available amount (totalAllocation - withdrawn)
            │   └── it should revert with InsufficientAllocation
            ├── when allocation is terminated
            │   └── it should revert with TerminatedAllocation
            └── when the value is less or equal to the available amount
                ├── when unlock time is in the past
                │   └── it should revert
                ├── when unlock time is too far in the future
                │   └── it should revert
                └── when parameters are valid
                    ├── it should create the lock
                    ├── it should update the user's locked balance
                    ├── it should not affect the token balance of the user
                    ├── it should not affect the token balance of the staking contract
                    ├── it should update the total supply
                    └── it should emit a Deposit event
