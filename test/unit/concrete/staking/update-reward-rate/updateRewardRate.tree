updateRewardRate.t.sol
├── given the caller is not the owner
│   └── it should revert with OwnableUnauthorizedAccount error
└── given the caller is the owner
    ├── when the new reward rate is the same as the old rate
    │   └── it should revert with NoChange error
    ├── when the new reward rate is zero
    │   └── it should revert with InvalidRewardRate error
    └── when the new reward rate is different and non-zero
        ├── when the new reward amount exceeds the contract balance
        │   └── it should revert with InsufficientRewardBalance error
        ├── when the new reward amount is within the contract balance
        ├── given finishAt is not in the future
        │   ├── it should set finishAt to current time + duration
        │   ├── it should update the reward rate
        │   ├── it should update the updatedAt timestamp
        │   ├── it should emit a RewardRateUpdated event
        │   └── it should calculate the new reward amount correctly
        └── given finishAt is in the future
            ├── it should not change finishAt
            ├── it should update the reward rate
            ├── it should update the updatedAt timestamp
            ├── it should emit a RewardRateUpdated event
            └── it should calculate the new reward amount correctly
